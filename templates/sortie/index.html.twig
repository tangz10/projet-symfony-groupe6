{% extends 'base.html.twig' %}

{% block title %}Sorties{% endblock %}

{% block body %}
    {% set I = {
        'sun':'‚òÄÔ∏è','sun-cloud':'üå§Ô∏è','cloud':'‚òÅÔ∏è','fog':'üå´Ô∏è','drizzle':'üå¶Ô∏è',
        'rain':'üåßÔ∏è','rain-ice':'üåßÔ∏è‚ùÑÔ∏è','snow':'üå®Ô∏è','showers':'üå¶Ô∏è','storm':'‚õàÔ∏è','hail':'üå©Ô∏è'
    } %}
    {% set na_icon %}
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
             class="inline-block w-6 h-6 align-middle text-gray-400" aria-hidden="true">
            <path fill="currentColor" d="M19 18a4 4 0 0 0 0-8c-.3 0-.6 0-.8.1A6 6 0 0 0 6 11H5a4 4 0 0 0 0 8h14Z"/>
            <text x="12" y="15" text-anchor="middle" font-size="9" fill="white"
                  font-family="ui-sans-serif,system-ui">?</text>
        </svg>
    {% endset %}

    <div class="relative min-h-screen bg-cover bg-center flex justify-center items-start">
        <div class="relative z-10 w-full max-w-6xl mx-auto px-6 py-8 flex flex-col
            bg-white/95 backdrop-blur rounded-2xl shadow-xl md:overflow-hidden md:max-h-[calc(90vh-6rem)] my-6">

            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6">
                <h1 class="text-2xl md:text-3xl font-semibold text-gray-800">Filtrer les sorties</h1>
                <a href="{{ path('app_sortie_new') }}"
                   class="inline-flex items-center h-11 px-5 rounded-full bg-purple-600 text-white hover:bg-purple-700 shadow">
                    Cr√©er une sortie
                </a>
            </div>

            {{ form_start(form, {'method': 'GET', 'attr': {'class': 'space-y-4'}}) }}
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Site</label>
                    {{ form_widget(form.site, {'attr': {'class':'w-full h-11 rounded-lg border border-gray-300 bg-gray-50 px-3'}}) }}
                </div>

                <div class="md:col-span-2">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Nom contient</label>
                    {{ form_widget(form.q, {'attr': {'placeholder':'Rechercher‚Ä¶','class':'w-full h-11 rounded-lg border border-gray-300 bg-gray-50 px-3'}}) }}
                </div>

                <div class="flex items-end">
                    <button class="w-full h-11 rounded-lg border border-gray-300 bg-white hover:bg-gray-100 shadow text-gray-700">
                        Rechercher
                    </button>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mt-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Entre</label>
                    {{ form_widget(form.dateFrom, {'attr': {'class':'w-full h-11 rounded-lg border border-gray-300 bg-gray-50 px-3'}}) }}
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">et</label>
                    {{ form_widget(form.dateTo, {'attr': {'class':'w-full h-11 rounded-lg border border-gray-300 bg-gray-50 px-3'}}) }}
                </div>
                <div class="md:col-span-2 grid grid-cols-1 sm:grid-cols-2 gap-2 items-center">
                    <label class="inline-flex items-center gap-2 text-sm text-gray-700">
                        {{ form_widget(form.isOrganisateur, {'attr': {'class':'w-4 h-4 accent-purple-600'}}) }}
                        Sorties dont je suis l'organisateur/trice
                    </label>
                    <label class="inline-flex items-center gap-2 text-sm text-gray-700">
                        {{ form_widget(form.isInscrit, {'attr': {'class':'w-4 h-4 accent-purple-600'}}) }}
                        Sorties auxquelles je suis inscrit/e
                    </label>
                    <label class="inline-flex items-center gap-2 text-sm text-gray-700">
                        {{ form_widget(form.isNotInscrit, {'attr': {'class':'w-4 h-4 accent-purple-600'}}) }}
                        Sorties auxquelles je ne suis pas inscrit/e
                    </label>
                    <label class="inline-flex items-center gap-2 text-sm text-gray-700">
                        {{ form_widget(form.isPast, {'attr': {'class':'w-4 h-4 accent-purple-600'}}) }}
                        Sorties pass√©es
                    </label>
                </div>
            </div>
            {{ form_end(form) }}

            <div class="mt-4 md:hidden space-y-3">
                {% for s in sorties %}
                    {% set inscrit = me ? s.participantInscrit.contains(me) : false %}
                    {% set lib = s.etat ? s.etat.libelle : null %}
                    {% set m = meteo[s.id] ?? null %}
                    {% set iconKey = (m and m.icon is defined) ? m.icon : null %}
                    {% set tooltip = iconKey ? m.label : (m.na_reason ?? 'Pr√©vision indisponible') %}

                    <div class="border border-gray-200 rounded-xl p-4 bg-white">
                        <div class="flex items-start justify-between gap-3">
                            <div>
                                <div class="mt-1 text-sm text-gray-600 flex items-center gap-2">
                                    <span
                                        class="inline-block align-middle cursor-default meteo-tip text-[22px] md:text-[24px] leading-none"
                                        data-tooltip="{{ tooltip }}"
                                        tabindex="0"
                                        aria-label="{{ tooltip }}"
                                    >
                                        {% if iconKey and I[iconKey] is defined %}
                                            {{ I[iconKey] }}
                                        {% else %}
                                            {{ na_icon|raw }}
                                        {% endif %}
                                    </span>
                                </div>
                                <div class="mt-4 text-base font-semibold text-gray-900">{{ s.nom }}</div>
                                <div class="mt-1 text-sm text-gray-600">
                                    {{ s.dateHeureDebut ? s.dateHeureDebut|date('d/m/Y H:i') : '‚Äî' }}
                                    ¬∑ Cl√¥ture : {{ s.dateLimiteInscription ? s.dateLimiteInscription|date('d/m/Y') : '‚Äî' }}
                                </div>
                                <div class="mt-1 text-sm text-gray-600">
                                    {{ s.participantInscrit|length }}/{{ s.nbInscriptionsMax }} inscrits
                                </div>
                                <div class="mt-2">
                                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                                    {{ lib == 'Ouverte' ? ' bg-green-100 text-green-800' :
                                        lib == 'En cours' ? ' bg-blue-100 text-blue-800' :
                                        lib == 'Cl√¥tur√©e' ? 'bg-orange-100 text-orange-700' :
                                        lib == 'Pass√©e' ? ' bg-gray-200 text-gray-700' :
                                        lib == 'Annul√©e' ? ' bg-red-100 text-red-700' :
                                        ' bg-purple-100 text-purple-800' }}">
                                    {{ lib ?? '‚Äî' }}
                                </span>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-sm text-gray-700">
                                    {{ s.participantOrganisateur ? s.participantOrganisateur.prenom ~ ' ' ~ s.participantOrganisateur.nom : '‚Äî' }}
                                </div>
                            </div>
                        </div>

                        <div class="mt-3 flex items-center justify-end gap-4">
                            <a href="{{ path('app_sortie_show', {'id': s.id}) }}" class="text-purple-700 hover:underline">Afficher</a>
                        </div>
                    </div>
                {% else %}
                    <div class="p-6 text-center text-gray-500">Aucune sortie ne correspond √† vos filtres.</div>
                {% endfor %}
            </div>

            <div class="mt-4 rounded-xl border border-gray-200 hidden md:block relative">
                <div class="max-h-[48vh] overflow-y-auto">
                    <div class="overflow-x-auto px-2 pb-4">
                        <table class="min-w-full divide-y divide-gray-200 bg-white">
                            <thead class="bg-gray-50">
                            <tr class="text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                                <th class="px-3 py-3 w-12 text-center">M√©t√©o</th>
                                <th class="px-4 py-3">Nom</th>
                                <th class="px-4 py-3">Date</th>
                                <th class="px-4 py-3">Cl√¥ture</th>
                                <th class="px-4 py-3">Inscrits / Places</th>
                                <th class="px-4 py-3">√âtat</th>
                                <th class="px-4 py-3">Inscrit</th>
                                <th class="px-4 py-3">Organisateur</th>
                                <th class="px-4 py-3 text-right">Actions</th>
                            </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-100">
                            {% for s in sorties %}
                                {% set inscrit = me ? s.participantInscrit.contains(me) : false %}
                                {% set lib = s.etat ? s.etat.libelle : null %}
                                {% set m = meteo[s.id] ?? null %}
                                {% set iconKey = m and m.icon is defined ? m.icon : null %}
                                {% set tooltip = iconKey
                                    ? (m.label ~ (m.tmin is defined ? ' ‚Ä¢ ' ~ m.tmin|number_format(0) ~ '‚Äì' ~ m.tmax|number_format(0) ~ '¬∞C' : ''))
                                    : (m.na_reason ?? 'Pr√©vision indisponible') %}
                                <tr class="hover:bg-gray-50">
                                    <td class="px-3 py-3 text-center">
                                        <span
                                            class="inline-block align-middle cursor-default meteo-tip text-[22px] md:text-[24px] leading-none"
                                            data-tooltip="{{ tooltip }}"
                                            tabindex="0"
                                            aria-label="{{ tooltip }}"
                                        >
                                            {% if iconKey and I[iconKey] is defined %}
                                                {{ I[iconKey] }}
                                            {% else %}
                                                {{ na_icon|raw }}
                                            {% endif %}
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 font-medium text-gray-800">{{ s.nom }}</td>
                                    <td class="px-4 py-3 text-gray-700">{{ s.dateHeureDebut ? s.dateHeureDebut|date('d/m/Y H:i') : '' }}</td>
                                    <td class="px-4 py-3 text-gray-700">{{ s.dateLimiteInscription ? s.dateLimiteInscription|date('d/m/Y') : '' }}</td>
                                    <td class="px-4 py-3 text-gray-700">{{ s.participantInscrit|length }}/{{ s.nbInscriptionsMax }}</td>
                                    <td class="px-4 py-3">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                                          {{ lib == 'Ouverte' ? ' bg-green-100 text-green-800' :
                                            lib == 'En cours' ? ' bg-blue-100 text-blue-800' :
                                            lib == 'Cl√¥tur√©e' ? 'bg-orange-100 text-orange-700' :
                                            lib == 'Pass√©e' ? ' bg-gray-200 text-gray-700' :
                                            lib == 'Annul√©e' ? ' bg-red-100 text-red-700' :
                                            ' bg-purple-100 text-purple-800' }}">
                                        {{ lib ?? '‚Äî' }}
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 text-center">
                                        {% if inscrit %}
                                            <span class="inline-flex items-center justify-center">
                                              <svg class="w-5 h-5 text-green-600" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                                                <path d="M20 7L10 17l-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                              </svg>
                                              <span class="sr-only">Inscrit</span>
                                            </span>
                                        {% else %}
                                            <span class="inline-flex items-center justify-center">
                                              <svg class="w-5 h-5 text-gray-300" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                                                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2" class="text-gray-200"/>
                                              </svg>
                                              <span class="sr-only">Non inscrit</span>
                                            </span>
                                        {% endif %}
                                    </td>
                                    <td class="px-4 py-3 text-gray-700">
                                        {{ s.participantOrganisateur ? s.participantOrganisateur.prenom ~ ' ' ~ s.participantOrganisateur.nom : '‚Äî' }}
                                    </td>
                                    <td class="px-4 py-3">
                                        <div class="flex items-center justify-end gap-3">
                                            <a href="{{ path('app_sortie_show', {'id': s.id}) }}" class="text-purple-700 hover:underline">Afficher</a>
                                        </div>
                                    </td>
                                </tr>
                            {% else %}
                                <tr>
                                    <td colspan="8" class="px-4 py-6 text-center text-gray-500">
                                        Aucune sortie ne correspond √† vos filtres.
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        (() => {
            const tip = document.createElement('div');
            tip.className = [
                'fixed z-[9999] max-w-[22rem] px-3 py-1.5 rounded-md',
                'bg-gray-900/95 text-white text-xs shadow-lg ring-1 ring-black/20',
                'pointer-events-none select-none',
                'opacity-0 transition-opacity duration-100'
            ].join(' ');
            const arrow = document.createElement('div');
            arrow.className = 'absolute w-2 h-2 rotate-45 bg-gray-900/95';
            tip.appendChild(arrow);
            document.body.appendChild(tip);

            let hideTimer;

            function show(el, e) {
                clearTimeout(hideTimer);
                tip.textContent = el.getAttribute('data-tooltip') || '';
                tip.appendChild(arrow); // remettre la fl√®che
                tip.style.opacity = '1';

                // Mesurer
                const rect = el.getBoundingClientRect();
                const gap = 10; // espace entre l‚Äôic√¥ne et le tooltip
                tip.style.left = '0px'; tip.style.top = '0px'; // reset pour mesure
                tip.style.display = 'block';
                const tRect = tip.getBoundingClientRect();

                // Position par d√©faut : au-dessus, centr√©
                let top = rect.top - tRect.height - gap;
                let left = rect.left + rect.width/2 - tRect.width/2;
                // Ajustements pour rester dans le viewport
                const vw = window.innerWidth, vh = window.innerHeight;
                if (top < 8) top = rect.bottom + gap; // flip dessous si pas de place
                if (left < 8) left = 8;
                if (left + tRect.width > vw - 8) left = vw - 8 - tRect.width;

                tip.style.transform = 'none';
                tip.style.left = `${Math.round(left)}px`;
                tip.style.top  = `${Math.round(top)}px`;

                // Fl√®che
                const aSize = 8;
                arrow.style.width = arrow.style.height = aSize + 'px';
                arrow.style.left = `${Math.round(rect.left + rect.width/2 - left - aSize/2)}px`;
                if (top > rect.top) {
                    // tooltip dessous => fl√®che en haut
                    arrow.style.top = `-${aSize/2}px`;
                } else {
                    // tooltip dessus => fl√®che en bas
                    arrow.style.top = `${tRect.height - aSize/2}px`;
                }
            }

            function hide() {
                hideTimer = setTimeout(() => {
                    tip.style.opacity = '0';
                    tip.style.display = 'none';
                }, 80);
            }

            // D√©l√©gation d‚Äô√©v√©nements (marche partout)
            document.addEventListener('mouseover', (e) => {
                const el = e.target.closest('.meteo-tip');
                if (el) show(el, e);
            });
            document.addEventListener('focusin', (e) => {
                const el = e.target.closest('.meteo-tip');
                if (el) show(el, e);
            });
            document.addEventListener('mouseout', (e) => {
                if (e.target.closest('.meteo-tip')) hide();
            });
            document.addEventListener('focusout', (e) => {
                if (e.target.closest('.meteo-tip')) hide();
            });
            window.addEventListener('scroll', () => { tip.style.opacity = '0'; tip.style.display = 'none'; }, { passive:true });
            window.addEventListener('resize', () => { tip.style.opacity = '0'; tip.style.display = 'none'; });
        })();
    </script>
{% endblock %}

